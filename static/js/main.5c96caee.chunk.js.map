{"version":3,"sources":["contador.js","App.js","serviceWorker.js","index.js"],"names":["Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","song","state","counter","like","bind","assertThisInitialized","dislike","console","log","setState","react_default","a","createElement","className","onClick","Component","App","maxLength","apiKey","before","after","_this2","fetch","concat","then","res","json","resp","search","topartists","artist","name","img","image","length","catch","e","more","todos","src","alt","contador","nameArtist","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c96caee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.song = 'NOMBRE DE la cancion'\r\n        this.state = {\r\n            counter: 0\r\n        }\r\n        this.like = this.like.bind(this);\r\n        this.dislike = this.dislike.bind(this);\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(this.props);\r\n    }\r\n    like() {\r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        });\r\n    }\r\n    dislike() {\r\n        if (this.state.counter > 0) {\r\n            this.setState({\r\n                counter: this.state.counter - 1\r\n            })\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='row pt-2 text-center border'>\r\n                 <div className=\"col-12 col-md-6 \">\r\n                    <p>{this.song}</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-2 \">\r\n                    <span>{this.state.counter}</span>\r\n                </div>\r\n                <div className=\"col-6 col-md-2 \">\r\n                    <i className=\"fas fa-thumbs-up\" onClick={this.like}></i>\r\n                </div>\r\n                <div className=\"col-6 col-md-2 \">\r\n                    <i   className=\"fas fa-thumbs-down\" onClick={this.dislike}></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Counter","import React, { Component } from 'react';\nimport './App.css';\nimport Counter from './contador'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      counter: 0,\n      maxLength:null,\n    }\n    this.apiKey = '5a1efd24e5a648c36e20f365271a017a';\n    this.before = this.before.bind(this);\n    this.after = this.after.bind(this);\n  }\n  componentWillMount() {\n     fetch(`https://ws.audioscrobbler.com/2.0/?method=geo.gettopartists&country=peru&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\n        .then(resp => {\n          const search=resp.topartists.artist;\n          // Cambiando los valores de las propiedades\n            this.setState({\n              name:search[0].name,\n              img:search[0].image[3][\"#text\"],\n              search:search,\n              maxLength:search.length\n            })    \n          \n            // fetch(`https://ws.audioscrobbler.com/2.0/?method=album.search&album=${this.state.name}&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\n            // .then(o => {console.log(this.state);\n            //   console.log(o);\n              \n            // })\n            // .catch(e => console.log(e))\n        })\n      .catch(e => console.log(e))\n      \n      \n      \n  }\n  before() {    \n    if(this.state.counter===this.state.maxLength-1){\n      const more=0;\n      this.setState({\n        counter: more,\n        img:this.state.search[more].image[3][\"#text\"],\n        name:this.state.search[more].name\n      });\n    }\n    else{\n     const more=this.state.counter + 1;\n    this.setState({\n      counter: more,\n      img:this.state.search[more].image[3][\"#text\"],\n      name:this.state.search[more].name\n    }); \n    }\n    \n  }\n  after() {\n    if(this.state.counter===0){\n      const more=this.state.maxLength-1;\n      this.setState({\n        counter: more,\n        img:this.state.search[more].image[3][\"#text\"],\n        name:this.state.search[more].name\n      });\n    }\n    else{\n     const more=this.state.counter - 1;\n    this.setState({\n      counter: more,\n      img:this.state.search[more].image[3][\"#text\"],\n      name:this.state.search[more].name\n    }); \n    }\n    \n  } \n  render() {\n    console.log(this.state);\n    \n    const todos = \n    <div className=\"row\">\n      <div className=\"col-md-12 text-center p-5\">\n      <img src={this.state.img} className=\"img-fluid\"  alt=\"imagende artista\"/>\n      </div>\n      <div className=\"col-md-12 text-center\">\n        <div className=\"row\">\n          <div className=\"col-3 col-md-3  p-2\">\n          <i className=\"fas fa-angle-left display-4\"onClick={this.after}></i>\n          </div>\n          <div className=\"col-6 col-md-6  pt-3\">\n          {this.state.name}\n          </div>\n          <div className=\"col-3 col-md-3  p-2\">\n          <i className=\"fas fa-angle-right display-4\"  onClick={this.before}></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-12\">\n      \n      <Counter\n      nameArtist={this.state}\n      />\n      </div>\n    </div>\n    \n    return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark  \">\n        <a href=\"#\" className=\"navbar-brand fas fa-music\" >\n          <span className=\"pl-3\" >Music</span> </a>  \n      </nav>\n      <div className=\"container mt-5 p-5\">\n        <div className=\"row \">\n          <div className=\"col-md-12\">\n          {todos}\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}