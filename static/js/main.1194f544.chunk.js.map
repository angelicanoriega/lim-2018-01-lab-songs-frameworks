{"version":3,"sources":["contador.js","Artis.js","App.js","serviceWorker.js","index.js"],"names":["Contador","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","like","name","console","log","setState","counter","state","dislike","song","react_default","a","createElement","className","onClick","Component","App","before","maxLength","fetch","concat","search","apiKey","then","res","json","list","results","albummatches","album","map","img","image","more","after","_this2","resp","topartists","artist","length","catch","e","src","alt","contador","href","Artis","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1194f544.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Contador extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        console.log(props);\r\n        \r\n        this.state = {\r\n            counter: 0,\r\n            song:''\r\n        }\r\n    }\r\n    like=(name)=>{\r\n        console.log(name);\r\n        \r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        });\r\n    }\r\n    dislike=(name)=>{\r\n        console.log(name);\r\n\r\n        if (this.state.counter > 0) {\r\n            this.setState({\r\n                counter: this.state.counter - 1\r\n            })\r\n        };\r\n    }\r\n    render() {\r\n        console.log(this.props.song);\r\n        return (\r\n            <div className='row pt-2 text-center border'>\r\n                 <div className=\"col-12 col-md-6 \">\r\n                    <p>{this.props.song}</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-2 \">\r\n                    <p>{this.state.counter}</p>\r\n                </div>\r\n                <div className=\"col-6 col-md-2 \">\r\n                    <i className=\"fas fa-thumbs-up\" onClick={this.like}></i>\r\n                </div>\r\n                <div className=\"col-6 col-md-2 \">\r\n                    <i   className=\"fas fa-thumbs-down\" onClick={this.dislike}></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n}\r\nexport default Contador","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Counter from './contador'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      counter: 0,\r\n      maxLength: null,\r\n    }\r\n    this.apiKey = '5a1efd24e5a648c36e20f365271a017a';\r\n  }\r\n  componentDidMount() {\r\n    fetch(`https://ws.audioscrobbler.com/2.0/?method=geo.gettopartists&country=peru&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\r\n      .then(resp => {\r\n        const search = resp.topartists.artist;\r\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=album.search&album=${search[0].name}&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\r\n        .then(song => {\r\n          const list=song.results.albummatches.album.map(list=>{return list.name})\r\n          this.setState({\r\n            name: search[0].name,\r\n            img: search[0].image[3][\"#text\"],\r\n            search: search,\r\n            maxLength: search.length,\r\n            song:list\r\n          })\r\n        })\r\n        .catch(e => console.log(e))\r\n      })\r\n      .catch(e => console.log(e))\r\n      \r\n  }\r\n  before = () => {\r\n      if (this.state.counter === this.state.maxLength - 1) {\r\n        const more = 0;\r\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=album.search&album=${this.state.search[more].name}&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\r\n          .then(song => {\r\n            const list=song.results.albummatches.album.map(list=>{return list.name})\r\n            this.setState({\r\n              counter: more,\r\n              img: this.state.search[more].image[3][\"#text\"],\r\n              name: this.state.search[more].name,\r\n              song: list\r\n            });\r\n          })\r\n      } else {\r\n        const more = this.state.counter + 1;\r\n        fetch(`https://ws.audioscrobbler.com/2.0/?method=album.search&album=${this.state.search[more].name}&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\r\n          .then(song => {\r\n            const list=song.results.albummatches.album.map(list=>{return list.name})\r\n            this.setState({\r\n              counter: more,\r\n              img: this.state.search[more].image[3][\"#text\"],\r\n              name: this.state.search[more].name,\r\n              song: list\r\n            });\r\n          })\r\n      }\r\n  }\r\n  after = () => {\r\n    if (this.state.counter === 0) {\r\n      const more = this.state.maxLength - 1;\r\n      fetch(`https://ws.audioscrobbler.com/2.0/?method=album.search&album=${this.state.search[more].name}&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\r\n      .then(song => {\r\n        const list=song.results.albummatches.album.map(list=>{return list.name})\r\n        this.setState({\r\n          counter: more,\r\n          img: this.state.search[more].image[3][\"#text\"],\r\n          name: this.state.search[more].name,\r\n          song: list\r\n        });\r\n      })\r\n    } else {\r\n      const more = this.state.counter - 1;\r\n      fetch(`https://ws.audioscrobbler.com/2.0/?method=album.search&album=${this.state.search[more].name}&api_key=${this.apiKey}&limit=10&format=json`).then(res => res.json())\r\n          .then(song => {\r\n            const list=song.results.albummatches.album.map(list=>{return list.name})\r\n            this.setState({\r\n              counter: more,\r\n              img: this.state.search[more].image[3][\"#text\"],\r\n              name: this.state.search[more].name,\r\n              song: list\r\n            });\r\n          })\r\n    }\r\n\r\n\r\n  }\r\n  render() {   \r\n    console.log(this.state.song);\r\n     \r\n  return (\r\n  <div className=\"row\">\r\n      <div className=\"col-md-12 text-center p-5\">\r\n          <img src={this.state.img} className=\"img-fluid\"  alt=\"imagende artista\"/>\r\n      </div>\r\n      <div className=\"col-md-12 text-center\">\r\n          <div className=\"row\">\r\n              <div className=\"col-3 col-md-3  p-2\">\r\n                  <i className=\"fas fa-angle-left display-4\"onClick={this.after}></i>\r\n              </div>\r\n              <div className=\"col-6 col-md-6  pt-3\">\r\n                  {this.state.name}\r\n              </div>\r\n              <div className=\"col-3 col-md-3  p-2\">\r\n                  <i className=\"fas fa-angle-right display-4\"  onClick={this.before}></i>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n        {<Counter\r\n        song={this.state.song}\r\n        />}  \r\n      </div>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Artis from './Artis'\r\n\r\nclass App extends Component {\r\n\r\nrender() {    \r\nreturn (\r\n    <div className=\"App\">\r\n        <nav className=\"navbar navbar-dark  \">\r\n            <a href=\".App\" className=\"navbar-brand fas fa-music\" >\r\n            <span className=\"pl-3\" >Music</span> </a>  \r\n        </nav>\r\n        <div  className=\"container mt-5 p-5\">\r\n            <div className=\"row \">\r\n                <div className=\"col-md-12\">\r\n                    <Artis/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}